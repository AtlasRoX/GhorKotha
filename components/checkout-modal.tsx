"use client"

import type React from "react"

import { useState } from "react"
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Separator } from "@/components/ui/separator"
import { useCart } from "@/contexts/cart-context"
import { toast } from "@/hooks/use-toast"
import { Loader2, MessageCircle } from "lucide-react"

interface CheckoutModalProps {
  isOpen: boolean
  onClose: () => void
}

export function CheckoutModal({ isOpen, onClose }: CheckoutModalProps) {
  const { state, clearCart } = useCart()
  const { items = [], total = 0 } = state || {}
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [formData, setFormData] = useState({
    customerName: "",
    customerPhone: "",
    customerAddress: "",
    notes: "",
  })

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData((prev) => ({ ...prev, [name]: value }))
  }

  const generateWhatsAppMessage = () => {
    const orderDetails = items
      .map(
        (item) =>
          `‚Ä¢ ${item.name} - ${item.quantity} ‡¶ü‡¶ø √ó ‡ß≥${item.price} = ‡ß≥${(item.price * item.quantity).toLocaleString()}`,
      )
      .join("\n")

    const message = `üõí *‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ - ‡¶ò‡¶∞‡¶ï‡¶•‡¶æ*

üë§ *‡¶ó‡ßç‡¶∞‡¶æ‡¶π‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø:*
‡¶®‡¶æ‡¶Æ: ${formData.customerName}
‡¶´‡ßã‡¶®: ${formData.customerPhone}
‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ: ${formData.customerAddress}

üì¶ *‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£:*
${orderDetails}

üí∞ *‡¶Æ‡ßã‡¶ü: ‡ß≥${total.toLocaleString()}*

${formData.notes ? `üìù *‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ:*\n${formData.notes}` : ""}

‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! üôè`

    return encodeURIComponent(message)
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    if (!formData.customerName || !formData.customerPhone || !formData.customerAddress) {
      toast({
        title: "‡¶§‡¶•‡ßç‡¶Ø ‡¶Ö‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£",
        description: "‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶¨ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶§‡¶•‡ßç‡¶Ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
        variant: "destructive",
      })
      return
    }

    if (items.length === 0) {
      toast({
        title: "‡¶ï‡¶æ‡¶∞‡ßç‡¶ü ‡¶ñ‡¶æ‡¶≤‡¶ø",
        description: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶∞‡ßç‡¶ü‡ßá ‡¶™‡¶£‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
        variant: "destructive",
      })
      return
    }

    setIsSubmitting(true)

    try {
      const whatsappUrl = `https://wa.me/8801738354089?text=${generateWhatsAppMessage()}`
      window.open(whatsappUrl, "_blank")

      clearCart()
      onClose()

      toast({
        title: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶´‡¶≤!",
        description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ WhatsApp ‡¶è ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∂‡ßÄ‡¶ò‡ßç‡¶∞‡¶á ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡•§",
      })

      setFormData({
        customerName: "",
        customerPhone: "",
        customerAddress: "",
        notes: "",
      })
    } catch (error) {
      console.error("WhatsApp redirect error:", error)
      toast({
        title: "‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
        description: "WhatsApp ‡¶ñ‡ßÅ‡¶≤‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
        variant: "destructive",
      })
    } finally {
      setIsSubmitting(false)
    }
  }

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="w-[95vw] max-w-md mx-auto max-h-[90vh] overflow-y-auto">
        <DialogHeader className="pb-4">
          <DialogTitle className="text-center text-lg sm:text-xl">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®</DialogTitle>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-4 sm:space-y-6">
          {/* Order Summary */}
          <div className="bg-muted/50 p-3 sm:p-4 rounded-lg">
            <h3 className="font-semibold mb-2 text-sm sm:text-base">‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡¶æ‡¶Ç‡¶∂</h3>
            <div className="space-y-1 text-xs sm:text-sm">
              {items.map((item) => (
                <div key={item.id} className="flex justify-between">
                  <span>
                    {item.name} √ó {item.quantity}
                  </span>
                  <span>‡ß≥{(item.price * item.quantity).toLocaleString()}</span>
                </div>
              ))}
            </div>
            <Separator className="my-2" />
            <div className="flex justify-between font-semibold text-sm sm:text-base">
              <span>‡¶Æ‡ßã‡¶ü:</span>
              <span className="text-primary">‡ß≥{total.toLocaleString()}</span>
            </div>
          </div>

          {/* Customer Details */}
          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="customerName" className="text-sm">
                ‡¶®‡¶æ‡¶Æ *
              </Label>
              <Input
                id="customerName"
                name="customerName"
                value={formData.customerName}
                onChange={handleInputChange}
                placeholder="‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ"
                className="h-11 text-base"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="customerPhone" className="text-sm">
                ‡¶´‡ßã‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ *
              </Label>
              <Input
                id="customerPhone"
                name="customerPhone"
                value={formData.customerPhone}
                onChange={handleInputChange}
                placeholder="‡ß¶‡ßß‡ß≠‡ßß‡ß®-‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ"
                className="h-11 text-base"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="customerAddress" className="text-sm">
                ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ *
              </Label>
              <Textarea
                id="customerAddress"
                name="customerAddress"
                value={formData.customerAddress}
                onChange={handleInputChange}
                placeholder="‡¶¨‡¶æ‡¶°‡¶º‡¶ø/‡¶´‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞, ‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ, ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ, ‡¶•‡¶æ‡¶®‡¶æ, ‡¶ú‡ßá‡¶≤‡¶æ"
                rows={3}
                className="text-base resize-none"
                required
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="notes" className="text-sm">
                ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ (‡¶ê‡¶ö‡ßç‡¶õ‡¶ø‡¶ï)
              </Label>
              <Textarea
                id="notes"
                name="notes"
                value={formData.notes}
                onChange={handleInputChange}
                placeholder="‡¶ï‡ßã‡¶® ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."
                rows={2}
                className="text-base resize-none"
              />
            </div>
          </div>

          {/* Submit Button */}
          <Button type="submit" disabled={isSubmitting} className="w-full h-12 text-base" size="lg">
            {isSubmitting ? (
              <>
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶ï‡¶∞‡¶£...
              </>
            ) : (
              <>
                <MessageCircle className="mr-2 h-4 w-4" />
                WhatsApp ‡¶è ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡¶æ‡¶†‡¶æ‡¶®
              </>
            )}
          </Button>

          <p className="text-xs text-muted-foreground text-center leading-relaxed">
            ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá WhatsApp ‡¶è ‡¶∞‡¶ø‡¶°‡¶æ‡¶á‡¶∞‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶™‡ßç‡¶∞‡¶ø-‡¶´‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§
          </p>
        </form>
      </DialogContent>
    </Dialog>
  )
}
